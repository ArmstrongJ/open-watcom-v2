/*
 *  pthread.h   POSIX threads interface
 *
:include crwat.sp
 */
#ifndef _PTHREAD_H_INCLUDED
#define _PTHREAD_H_INCLUDED

:include readonly.sp

:include owrtlink.sp

:include cpluspro.sp

:include systypes.sp

:include lnxkpack.sp

/* Creation/destruction */
_WCRTLINK extern int  pthread_create( pthread_t *__thread, const pthread_attr_t *__attr, void *(*__start_routine)(void*), void *__arg );
_WCRTLINK extern void pthread_exit( void *__exit_val );

/* Mutexes */
_WCRTLINK int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__attr);
_WCRTLINK int pthread_mutex_destroy(pthread_mutex_t *__mutex);
_WCRTLINK int pthread_mutex_trylock(pthread_mutex_t *__mutex);
_WCRTLINK int pthread_mutex_lock(pthread_mutex_t *__mutex);
_WCRTLINK int pthread_mutex_unlock(pthread_mutex_t *__mutex);

:include poppack.sp

:include cplusepi.sp

#endif /* !_PTHREAD_H_INCLUDED */
